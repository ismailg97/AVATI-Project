@page "/EmployeeShortcard"

@using Team12.Data
@using BlazorDownloadFile
@using System.IO
@using System.Reflection
@using System.Threading
@using DocumentFormat.OpenXml
@using DocumentFormat.OpenXml.InkML
@using DocumentFormat.OpenXml.Packaging
@using DocumentFormat.OpenXml.Wordprocessing
@using Table = DocumentFormat.OpenXml.InkML.Table
@inject IBlazorDownloadFileService _blazorDownloadFileService

<title>EmployeeShortcard.razor</title>


<div class="card text-black bg-light border-dark">
    <div class="card-body">
        <button class="btn btn-outline-primary btn-sm float-right" id="generateDocument" @onclick="OnClicked">Dokument <br> generieren</button>
        <p class="card-text">Vorname: @Worker.FirstName </p>
        <p class="card-text">Nachname: @Worker.LastName </p>
        <p class="card-text"> Projekte: </p>
        <ul class="card-text">
            @foreach (string project in Worker.PrevProjects)
            {
                <li>@project</li>
            }
        </ul>
        <p class="card-text">Geburtstag: @Worker.DayOfBirth.ToString("dd.MM.yyyy")</p>
    </div>

</div>


@code {

    [Parameter]
    public Employee Worker { get; set; }

    public async Task OnClicked()
    {
        using (MemoryStream mem = new MemoryStream())
        {
            using (WordprocessingDocument wordDocument =
                WordprocessingDocument.Create(mem, WordprocessingDocumentType.Document))
            {
    //Grundstruktur des Dokuments erzeugen (Document und Rumpf des Dokuments)
                MainDocumentPart mainPart = wordDocument.AddMainDocumentPart();
                Document document1 = new Document();
                Body body1 = document1.AppendChild(new Body());
    //Document zeilenweise befüllen
                Paragraph para1 = body1.AppendChild(new Paragraph());
                Run run1 = para1.AppendChild(new Run());
                run1.AppendChild(new Text("Mitarbeiter: " + Worker.FirstName + " " + Worker.LastName));
                Paragraph para2 = body1.AppendChild(new Paragraph());
                Run run2 = para2.AppendChild(new Run());
                run2.AppendChild(new Text("Projekte: "));
                foreach (var projectName in Worker.PrevProjects)
                {
                    Paragraph para3 = body1.AppendChild(new Paragraph());
                    Run run3 = para3.AppendChild(new Run());
                    run3.AppendChild(new Text("   - " + projectName));
                    run3.AppendChild(new Break());
                }
                Paragraph para4 = body1.AppendChild(new Paragraph());
                Run run4 = para4.AppendChild(new Run());
                run4.AppendChild(new Text("Geburtsdatum: " + Worker.DayOfBirth.ToString("dd.MM.yyyy")));
    //Das erstellte Dokument übergeben
                mainPart.Document = document1;
            }


            var task = await _blazorDownloadFileService.DownloadFile("test.docx", mem, "application/octet-stream");
        }
    }

}