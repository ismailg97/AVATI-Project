@page "/skill/edit"
@page "/skill/edit/{ID:int}"

@using Microsoft.Extensions.Logging;

@using Team12.Data
@using Microsoft.EntityFrameworkCore
@inject ISkillService _skillService
@inject ILogger<EditSkill> Logger

@if (_skill.ID == null)         //von Anton geschickte Dokumentation zu Blazor-Formularen und -Validierung in ASP.NET CORE | Microsoft Docs
{
    <EditForm Model="@_skill" OnValidSubmit="@AddSKill">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="form-group">
            <label for="">Skillname</label>
            <InputTextArea @bind-value="_skill.Name"></InputTextArea>
            <label for="">Skilltyp</label>
        </div>
        <div>
            <InputSelectselect class="form-control" @bind="_skill.type">
                @foreach (var type in Enum.GetValues(typeof(Skilltype)))
                {
                    <option value="@type">
                        @type
                    </option>
                }
            </InputSelectselect>
        </div>
        <a href="/skill/index">
            <button type="submit">Submit</button>
        </a>
    </EditForm>
}
else
{
    <EditForm Model="@_skill" OnValidSubmit="@UpdateSkill">
            <DataAnnotationsValidator/>
            <ValidationSummary/>
            <div class="form-group">
                <label for="">Skillname</label>
                <InputTextArea @bind-value="_skill.Name"></InputTextArea>
                <label for="">Skilltyp</label>
            </div>
            <div>
                <InputSelectselect class="form-control" @bind="_skill.type">
                    @foreach (var type in Enum.GetValues(typeof(Skilltype)))
                    {
                        <option value="@type">
                            @type
                        </option>
                    }
                </InputSelectselect>
            </div>
            <a href="/skill/index">
                <button type="submit">Submit</button>
            </a>
        </EditForm>
}
@code{

    [Parameter] //fehler bei Zugriff auf {id:int} id mus sdeklariert sein
    public int ID { get; set; }

    Skill _skill = new Skill();

    private void UpdateSkill()
    {
        Logger.LogInformation("HandleValidSubmit called");
        _skillService.UpdateSkill(_skill);
    }

    private void AddSKill()
    {
        Logger.LogInformation("HandleValidSubmit called");
        _skillService.UpdateSkill(_skill);
    }
}