@page "/employeeProject"
@page "/employeeProject/{Id:int}"


@using AVATI.Data
@using DocumentFormat.OpenXml.Drawing
@using DocumentFormat.OpenXml.InkML
@using System.Diagnostics

@inject IProjektService _projektService
@inject JsonImport _jsonImport
@inject IHardskillService _hardskillService
@inject IProjectActivityService _projectActivityService
@inject NavigationManager _navManager
@inject IEmployeeService _employeeService
@inject IBasicDataService _basicDataService

<DeleteConfirmationProjectEmployee @ref="_deleteConfirmation" ProjectActivity="@ProjectActivity" Abstract="@this"></DeleteConfirmationProjectEmployee>

<h3>Projektübersicht</h3>

@if (PageIsLoaded)
{
    <EditForm Model="@projActivity">
        <table id="table" data-show-refresh="true" class="table align-middle mb-5">
            <thead>
            <div class="form-group">
                <input class="form-control" type="text" placeholder="Suche Projekt..."
                       @bind="Filter"
                       @bind:event="oninput">
            </div>
            <tr>
                <th scope="col">Projekttitel</th>
                <th scope="col">Projektbeschreibung</th>
                <th scope="col">Projekttätigkeit</th>
            </tr>
            </thead>
            <tbody>
            @if (_projectActivityService.GetProjectActivitiesEmployee(Id).Any())
            {
                @foreach (var activity in _projectActivityService.GetProjectActivitiesEmployee(Id))
                {
                    Project proj = _projektService.GetProject(activity.ProjectID);

                    <tr>

                        <td>@proj.Projecttitel</td>
                        <td>@proj.Projectdescription</td>
                        <td>@activity.Description</td>
                        <td>
                            <button type="button" @onclick="(() => { CollProj(activity.ProjectActivityID); Console.WriteLine(activity.ProjectActivityID); })" class="btn btn-secondary oi oi-pencil"></button>
                            <button type="button" @onclick="(() => { deleteProjectActivity(activity); })" class="btn btn-danger oi oi-trash">Löschen</button>
                        </td>

                        <div class="row">
                            <div class="card-text @(_booleanProj[activity.ProjectActivityID] ? "" : "collapse")">
                                <!--- <ul class="list-group mb-3 text-left"> --->

                                    <!------ Project Activity ---------->
                                    <div class="form-group">
                                        <label class="mr-3 mt-2">Projektaktivität: </label>
                                        <select>
                                            @foreach(var activities in _projectActivityService.GetAllProjectActivities()){
                                                <option @onclick="(() => { activity.Description = activities.Description; })" >@activities.Description</option>
                                            }
                                        </select>
                                    </div>


                                    <!------ Soft Skills ---------->
                                    <div class="form-group">
                                        <label class="mr-3 mt-2">Softskill: </label>
                                        @foreach (var softskilll in activity.SoftSkills)
                                        {
                                            <button type="button" class="btn btn-outline-success btn-sm mr-2" @onclick=@(() => { activity.SoftSkills.RemoveAll(x => x.Equals(softskilll)); })>
                                                <a>
                                                    <a class="showRemove"> @softskilll </a>
                                                    <a class="remove">
                                                        <span style="color: darkred" class="oi oi-x"></span>
                                                    </a>
                                                </a>
                                            </button>
                                        }
                                    </div>
                                    @foreach (var softskill in Emp.Softskills)
                                    {
                                        if (!activity.SoftSkills.Contains(softskill))
                                        {
                                            <button type="button" class="btn btn-outline-dark btn-sm mr-2 mb-2" @onclick=@(() => { activity.SoftSkills.Add(softskill); })>
                                                @softskill
                                            </button>
                                        }
                                    }


                                    <!------ Hard Skills ---------->
                                    <div class="form-group">
                                        <label class="mr-3 mt-2">Hardskill: </label>
                                        @foreach (var hardskilll in activity.HardSkillsDesc)
                                        {
                                            <button type="button" class="btn btn-outline-success btn-sm mr-2" @onclick=@(() => { activity.HardSkillsDesc.RemoveAll(x => x.Equals(hardskilll)); })>
                                                <a>
                                                    <a class="showRemove"> @hardskilll </a>
                                                    <a class="remove">
                                                        <span style="color: darkred" class="oi oi-x"></span>
                                                    </a>
                                                </a>
                                            </button>
                                        }
                                    </div>

                                    <!---<div class="card-title medium font-weight-light lead text-left" id="title" @onclick="(() => { CollHardSkill(activity.ProjectActivityID); })">Weitere Hard Skills</div>
                                    <div class="card-text @(_booleanHardSkill[activity.ProjectActivityID] ? "" : "collapse")"> --->
                                    <input class="form-control" type="text" placeholder="Suche Hardskill..."
                                           @bind="Filter"
                                           @bind:event="oninput">
                                    @foreach (var hardskill in Emp.Hardskills)
                                    {
                                        if (!activity.HardSkillsDesc.Contains(hardskill.Description))
                                        {
                                            <button type="button" class="btn btn-outline-dark btn-sm mr-2 mb-2" @onclick=@(() => { activity.HardSkillsDesc.Add(hardskill.Description); })>
                                                @hardskill.Description
                                            </button>
                                        }
                                    }
                                    <!--- </div> --->


                                    <button type="submit" class="btn btn-success oi oi-check" @onclick="(() => { UpdateActivity(activity); })" ></button>


                                    <!---<li class="list-group-item mb-1">
                                        @string.Join(" | ", activity.HardSkillsDesc)
                                    </li>
                                    <li>@string.Join("|", activity.SoftSkills)</li>
                                </ul> --->
                            </div>
                        </div>

                    </tr>
                }
            }
            else
            {
                <tr>
                    <td></td>
                    <td></td>
                </tr>
            }
            @if (_projektService.GetAllProjects().Any())
            {
                @foreach (var projects in _projektService.GetAllProjects())
                {
                    @if (!IsVisible(projects.Projecttitel))
                        continue;
                    projactList = _projectActivityService.GetEmployeeProjectActivities(Id, projects.ProjectID);

                    if (projactList.Find(x => x.EmployeeID == Id) == null)
                    {
                        <tr>
                            <td>@projects.Projecttitel</td>
                            <td>@projects.Projectdescription</td>
                            <td>

                                <select class="rounded form-control" type="text" @bind="@projActivity.Description" placeholder="">
                                    @foreach (var projACT in _projectActivityService.GetAllProjectActivities())
                                    {
                                        <option>@projACT.Description</option>
                                    }
                                </select>

                            </td>
                            <td>
                                <button type="button" @onclick="(() => { setProjectActivity(Id, projects.ProjectID, projActivity.Description); })" class="btn btn-success oi oi-plus"></button>

                            </td>
                        </tr>
                    }
                }
            }
            else
            {
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            }
            </tbody>
        </table>
    </EditForm>
}
else
{
    <div class="d-flex flex-column align-items-center justify-content-center">
        <div class="row">
            <div class="spinner-border" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
        <div class="row">
            <strong>Lade...</strong>
        </div>
    </div>
}

@code
{
    DeleteConfirmationProjectEmployee _deleteConfirmation;
    
    [Parameter]
    public int Id { get; set; }

    private ProjectActivity ProjectActivity;
    private bool PageIsLoaded = false;
    private Dictionary<int, bool> _booleanProj = new Dictionary<int, bool>();
    private Dictionary<int, bool> _booleanHardSkill = new Dictionary<int, bool>();
    public Employee Emp { get; set; }
    public ProjectActivity projActivity { get; set; }
    public Project project { get; set; }
    public List<ProjectActivity> projactList = new List<ProjectActivity>();
    public string Input { get; set; }
    public bool Clicked { get; set; } = false;
    private string Filter { get; set; }
    public List<Hardskill> HardskillList = new List<Hardskill>();


    protected override async Task OnInitializedAsync()
    {
        Task<List<Hardskill>> TempHard = _hardskillService.GetAllHardskills();
        HardskillList = await TempHard;
        projActivity = new ProjectActivity();
        Emp = _employeeService.GetEmployeeProfile(Id);
        foreach (var pA in _projectActivityService.GetProjectActivitiesEmployee(Id))
        {
            _booleanProj.Add(pA.ProjectActivityID, false);
            _booleanHardSkill.Add(pA.ProjectActivityID, false);
        }
        PageIsLoaded = true;
    }


    public bool IsVisible(string titel)
    {
        if (string.IsNullOrEmpty(Filter))
        {
            return true;
        }
        return titel.Contains(Filter, StringComparison.OrdinalIgnoreCase);
    }

    public void setProjectActivity(int empId, int projId, string description)
    {
        _projectActivityService.SetProjectActivity(empId, projId, description);
        _navManager.NavigateTo("/employeeProject/" + Emp.EmployeeID, forceLoad: true);
    }

    public void UpdateActivity( ProjectActivity activity)
    {
        _projectActivityService.UpdateProjectActivityEmployee(Id, activity.ProjectID, activity);
        _navManager.NavigateTo("/employeeProject/" + Emp.EmployeeID, forceLoad: true);
    }

    public void deleteProjectActivity(ProjectActivity activity)
    {
        ProjectActivity = activity;
        _deleteConfirmation.Showing();
        
    }

    public void CollProj(int ID)
    {
        _booleanProj[ID] = !_booleanProj[ID];
    }


    private void CollHardSkill(int ID)
    {
        _booleanHardSkill[ID] = !_booleanHardSkill[ID];
    }
    
    public void UpdateLists()
    {
        StateHasChanged();
    }
}