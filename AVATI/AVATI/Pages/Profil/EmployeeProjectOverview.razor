@page "/employeeProject"
@page "/employeeProject/{Id:int}"

@using AVATI.Data
@using DocumentFormat.OpenXml.Drawing
@using DocumentFormat.OpenXml.InkML

@inject IProjektService _projektService
@inject JsonImport _jsonImport
@inject ProjectServiceSimple _projectServiceSimple
@inject IProjectActivityService _projctActivityService

@inject IEmployeeService _employeeService

<h3>Projektübersicht</h3>

<!--<table class="table align-middle">
    
    <tr>
        <th scope="col">Projekttitel</th>
        <th scope="col">Projektbeschreibung</th>
        <th scope="col">Projekttätigkeit</th>
        <th scope="col"></th>
    </tr>
    @foreach (var project in _employeeService.GetEmployeeProfile(Id).Projects)
    {
        @if (!IsVisible(project.Projecttitel))
            continue;
        <tr>
            <td>@project.Projecttitel</td>
            <td>@project.Projectdescription</td>
            <td>@_projctActivityService.GetProjectActivities(Id,project.ProjectID)</td>
            <td>
                <a href="/Projektübersicht/Projektedit/@project.ProjectID">
                    <button type="button" class="btn btn-secondary">Edit</button>
                </a>
                
            </td>
        </tr>
        
        
    }
</table> -->




<table id="table" data-show-refresh="true" class="table align-middle mb-5 table-striped">
    <thead>
    <div class="form-group">
        <input class="form-control" type="text" placeholder="Suche Projekt..."
               @bind="Filter"
               @bind:event="oninput">
    </div>
    <tr>
        <th scope="col">Projekttitel</th>
        <th scope="col">Projektbeschreibung</th>
        <th scope="col">Projekttätigkeit</th>
    </tr>
    </thead>
    <tbody>
    @if (_projectServiceSimple._projects.Any())
    {
        @foreach (var project in _employeeService.GetEmployeeProfile(Id).Projects)
        {
            @if (!IsVisible(project.Projecttitel))
                continue;
            <tr>
                <td>@project.Projecttitel</td>
                <td>@project.Projectdescription</td>
                <td><input type="text" @bind="projActivity" placeholder="@_projctActivityService.GetProjectActivities(Id,project.ProjectID)"></td>
                <td>
                    
                        <button type="button" @onclick="(() => { setProjectActivity(Id,project.ProjectID); })" class="btn btn-secondary">Bearbeiten</button>
                        <button type="button" @onclick="(() => { deleteProjectActivity(Id,project.ProjectID); })" class="btn btn-danger">Löschen</button>

                </td>
            </tr>
        }
    }
    </tbody>
</table>



@code
{
    [Parameter]
    public int Id { get; set; }
    
    public Employee Emp { get; set; }
    
    public string projActivity { get; set; }
    
    
    public string Input { get; set; }
    public bool Clicked { get; set; } = false;

    private string Filter { get; set; }

    public bool IsVisible(string titel)
    {
        if (string.IsNullOrEmpty(Filter))
        {
            return true;
        }
        return titel.Contains(Filter, StringComparison.OrdinalIgnoreCase);
    }

    public void ProjectSuche()
    {
        Clicked = true;
        List<Project> projects = _projectServiceSimple.GetAllProjects();
        _projectServiceSimple.SearchProject(projects, Input);
    }

    public void setProjectActivity(int empId, int projId)
    {
        _projctActivityService.SetProjectActivity(empId, projId, projActivity);
    }

    public void deleteProjectActivity(int empId, int projId)
    {
        _projctActivityService.DeleteProjectActivity(empId, projId );
    }

}











