@page "/profile"
@using AVATI.Data
@using Azure.Core
@using DocumentFormat.OpenXml.Spreadsheet
@using Microsoft.AspNetCore.Http
@inject NavigationManager _navManager
@inject IEmployeeService _employee
@inject IProjectActivityService _projctActivityService
@inject IProjektService _projektService
@inject AuthenticationStateProvider _authenticationStateProvider
@inject NavigationManager _navigationManager
@inject HttpClient _httpClient
@inject IHttpContextAccessor _httpContextAccessor

<AuthorizeView>
    <NotAuthorized>
       
        
    </NotAuthorized>
    <Authorized>
    

<h3 class="text-left">Profil</h3>

<div class="container backdrop emp-profile">
    <div class="row">
        <div class="col-md-4">
            <div style="margin-top: -5%; border-radius: 80%" class="profile-img">
                @if (Emp.Image == null)
                {
                    <img class="rounded" src="https://www.geniale-tipps.de/images/t/whatsapp-profilbild-grau.jpg" style="margin-left: -45px" width="300" height="200" alt=""/>
                }
                else
                {
                    <img class="rounded" src="@Emp.Image" style="margin-left: -45px" width="300" height="200" alt=""/>
                }
            </div>
        </div>
        <div class="col-md-6">
            <div class="rounded-3 profile-head">
                <div style="margin-left: 12px" class="form-group text-left">

                    <!------ Name ---------->
                    <h6 style="color: black">
                        @Emp.FirstName @Emp.LastName
                    </h6>

                    <!------ RC-Level ---------->
                    <p class="profile-rating">RateCard : <span>@Emp.Rc</span></p>

                    <!------ Employment Time ---------->
                    <p style="color: #000;margin-top: -7px">Beschäftigt seit: @Emp.EmploymentTime.ToShortDateString()</p>

                    <p style="color: #000;margin-top: -7px">Relevante Berufserfahrung: @(Emp.RelevantWorkExperience) Jahre</p>

                </div>
            </div>
        </div>
        <!------ Edit Profile Button ---------->
        <button type="button" class="btn btn-info" style="height: 40px;" @onclick="() => { NavToUpdate(); }">
            Profil bearbeiten
        </button>
    </div>

    <!------ Skills ---------->
    <div class="row rounded ">

        <div style="border-color: black" class="col-md-4 backdrop form-group rounded">

            <div style="margin-top: 50px; border-width: medium; color: black" class="dropdown-divider">Skills</div>
            <div class="form-group  text-left">

                <!------ Hard Skills ---------->
                <div class="form-group small text-left">
                    <button type="button" class="btn btn-outline-secondary text-left form-group" @onclick="(() => { CollHardSkill(); })"><span class="oi oi-list" aria-hidden="true"></span> Hard Skills</button>
                    <div class="card-text @(_booleanHardSkill ? "" : "collapse")">
                        <table class="table table-striped">
                            <tr>
                                <th>Beschreibung</th>
                                <th>Level</th>
                            </tr>
                            @foreach (var hardskill in Emp.HardSkillLevel)
                            {
                                <tr>
                                    <td>@hardskill.Item1.Description</td>
                                    <td>@hardskill.Item2</td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>

                <div style=" border-width: medium; color: black" class="dropdown-divider"></div>

                <!------ Soft Skills ---------->
                <div class="form-group small text-left">
                    <button type="button" class="form-group btn btn-outline-secondary text-left" @onclick="(() => { CollSoftSkill(); })"><span class="oi oi-list" aria-hidden="true"></span> Soft Skills</button>
                    <div class="card-text @(_booleanSoftSkill ? "" : "collapse")">
                        <table class="table table-striped">
                            @foreach (var softskill in Emp.Softskills)
                            {
                                <tr>
                                    <td>@softskill</td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>

                <div style=" border-width: medium; color: black" class="dropdown-divider"></div>

                <!------ Rollen ---------->
                <div class="form-group small text-left">
                    <button type="button" class="btn btn-outline-secondary text-left form-group" @onclick="(() => { CollRole(); })"><span class="oi oi-list" aria-hidden="true"></span> Rollen</button>
                    <div class="card-text @(_booleanRole ? "" : "collapse")">
                        <ul class="list-group mb-3 text-left">
                            <table class="table table-striped">
                                @foreach (var rolle in Emp.Roles)
                                {
                                    <tr>
                                        <td>@rolle</td>
                                    </tr>
                                }
                            </table>
                        </ul>
                    </div>
                </div>
            </div>
        </div>


        <div style="border-color: black" class="form-group backdrop rounded col-md-8">
            <div style="margin-top: 50px; border-width: medium; color: black" class="dropdown-divider"></div>

            <!------ Fields ---------->
            <div class="form-row">
                <div class="form-group backdrop small text-left">
                    <button type="button" class="btn btn-outline-secondary text-left form-group" @onclick="(() => { CollField(); })"><span class="oi oi-list" aria-hidden="true"></span> Branchenwissen</button>
                    <div class="card-text @(_booleanField ? "" : "collapse")">
                        <ul class="list-group mb-3 text-left">
                            @if (Emp.Field.Any())
                            {
                                <table style="text-align: left" class="table align-middle">
                                    @foreach (var elem in Emp.Field)
                                    {
                                        <tr>
                                            <td>@elem</td>
                                        </tr>
                                    }
                                </table>
                            }
                        </ul>
                    </div>
                </div>
            </div>


            <div style=" border-width: medium; color: black" class="dropdown-divider"></div>

            <!------ Languages ---------->
            <div class="form-group small rounded text-left">
                <button type="button" class="btn btn-outline-secondary text-left form-group" @onclick="(() => { CollLang(); })"><span class="oi oi-list" aria-hidden="true"></span> Sprachen</button>
                <div class="card-text @(_booleanLang ? "" : "collapse")">
                    @if (Emp.Language.Any())
                    {
                        <table style="text-align: left" class="table align-middle">
                            <tr>
                                <th class="text-left">Sprache</th>
                                <th class="text-center">Sprachniveau</th>
                            </tr>
                            @foreach (var lang in Emp.Language)
                            {
                                <tr>
                                    <td class="text-left">@lang.Item1</td>
                                    <td class="text-center">@lang.Item2</td>
                                </tr>
                            }
                        </table>
                    }
                    else
                    {
                        <p>Scheint nichts hier zu sein.</p>
                    }
                </div>
            </div>

            <div style=" border-width: medium; color: black" class="dropdown-divider"></div>

            <!------ Projects ---------->
            <div class="form-group backdrop small text-left">
                <button type="button" class="btn btn-outline-secondary text-left form-group" @onclick="(() => { CollProj(); })"><span class="oi oi-list" aria-hidden="true"></span> Projekte</button>
                <div class="card-text @(_booleanProj ? "" : "collapse")">
                    <table style="text-align: left" class="table align-middle">
                        
                        @if (!_projectWithGroupedActivities.Any())
                        {
                            <tr>
                                <td class="text-left">[Sie sind noch keinem Projekt zugewiesen]</td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <th class="text-left">Projekt</th>
                                <th class="text-left">Projekttätigkeit</th>
                            </tr>
                            foreach (var projectId in _projectWithGroupedActivities.Keys)
                            {
                                var projecttitle = _projektService.GetProject(projectId).Projecttitel;
                                <tr>
                                    <td>@projecttitle</td>
                                    <td>
                                        <ul>
                                            @if (!_projectWithGroupedActivities[projectId].Any())
                                            {
                                                <a>[Sie haben sich noch keiner Tätigkeit zugewiesen]</a>
                                            }
                                            else
                                            {
                                                foreach (var activity in _projectWithGroupedActivities[projectId])
                                                {
                                                    <li>@activity.Description</li>
                                                }
                                            }
                                        </ul>
                                    </td>
                                </tr>
                            }
                        }
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
    </Authorized>
</AuthorizeView>

@code {


    private bool _booleanLang = false;
    private bool _booleanProj = false;
    private bool _booleanField = false;
    private bool _booleanHardSkill = false;
    private bool _booleanSoftSkill = false;
    private bool _booleanRole = false;
    private bool _booleanWork = false;

    [Parameter]
    public int Id { get; set; }

    public List<ProjectActivity> ActivityList { get; set; }
    private Dictionary<int, List<ProjectActivity>> _projectWithGroupedActivities;

    Employee Emp { get; set; }


    public void Save()
    {
        Emp.EmployeeID = Id;
        _employee.EditEmployeeProfile(Emp);
        _navigationManager.NavigateTo("profile/update/" + @Emp.EmployeeID);
    }

    protected override void OnInitialized()
    {
        if (_httpContextAccessor.HttpContext != null)
        {
            string context = _httpContextAccessor.HttpContext.User.Claims.FirstOrDefault()?.Value;
            Id = Int16.Parse(context ?? throw new InvalidOperationException());
        }
    //var value= HttpRequest.Cookies["key"].Value;
        _projectWithGroupedActivities = _projctActivityService.GetActivitiesWithProjectsGrouped(Id);
        _authenticationStateProvider.GetAuthenticationStateAsync();
        Emp = _employee.GetEmployeeProfile(Id);
    }

    public void CollLang()
    {
        _booleanLang = !_booleanLang;
    }

    public void CollProj()
    {
        _booleanProj = !_booleanProj;
    }

    public void CollField()
    {
        _booleanField = !_booleanField;
    }

    public void CollHardSkill()
    {
        _booleanHardSkill = !_booleanHardSkill;
    }

    public void CollSoftSkill()
    {
        _booleanSoftSkill = !_booleanSoftSkill;
    }

    public void CollRole()
    {
        _booleanRole = !_booleanRole;
    }

    public void CollWork()
    {
        _booleanWork = !_booleanWork;
    }

    public void NavToUpdate()
    {
        _navigationManager.NavigateTo("profile/update/" + @Emp.EmployeeID);
        StateHasChanged();
    }




}