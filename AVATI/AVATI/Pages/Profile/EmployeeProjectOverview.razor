@page "/employeeProject"
@page "/employeeProject/{Id:int}"


@using AVATI.Data
@using DocumentFormat.OpenXml.Drawing
@using DocumentFormat.OpenXml.InkML
@using System.Diagnostics
@using Microsoft.AspNetCore.Http

@inject IProjektService _projektService
@inject JsonImport _jsonImport
@inject IHardskillService _hardskillService
@inject IProjectActivityService _projectActivityService
@inject NavigationManager _navManager
@inject IEmployeeService _employeeService
@inject IBasicDataService _basicDataService
@inject IHttpContextAccessor _httpContextAccessor

<DeleteConfirmationProjectEmployee @ref="_deleteConfirmation" ProjectActivity="@_projectActivity" Abstract="@this"></DeleteConfirmationProjectEmployee>

<h3>Projektübersicht</h3>

@if (_pageIsLoaded)
{
    <EditForm Model="@ProjActivity">
        <table id="table" data-show-refresh="true" class="table align-middle table-striped mb-5">
            <thead>
            <div class="form-group">
                <input class="form-control" type="text" placeholder="Suche Projekt..."
                       @bind="Filter"
                       @bind:event="oninput">
            </div>
            <tr>
                <th scope="col">Projekttitel</th>
                <th scope="col">Projektbeschreibung</th>
                <th scope="col">Projekttätigkeit</th>
            </tr>
            </thead>
            <tbody>
            @if (_projectActivityService.GetProjectActivitiesOfEmployee(Id).Any())
            {
                @foreach (var activity in _projectActivityService.GetProjectActivitiesOfEmployee(Id))
                {
                    Project proj = _projektService.GetProject(activity.ProjectID);
                    <tr>
                        <td>@proj.Projecttitel</td>
                        <td>@proj.Projectdescription</td>
                        <td>@activity.Description</td>
                        <td>
                            <button type="button" @onclick="(() => { ShowUpdate(activity); })" class="btn btn-secondary oi oi-pencil"></button>
                            <button type="button" @onclick="(() => { DeleteProjectActivity(activity); })" class="btn btn-danger oi oi-trash">Löschen</button>
                            <button type="button" @onclick="(() => { ShowAdd(activity); })" class="btn btn-success oi oi-plus"></button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td></td>
                    <td></td>
                </tr>
            }
            @if (_projektService.GetAllProjects().Any())
            {
                @foreach (var projects in _projektService.GetAllProjects())
                {
                    @if (!IsVisible(projects.Projecttitel))
                        continue;
                    ProjactList = _projectActivityService.GetEmployeeProjectActivities(Id, projects.ProjectID);

                    if (ProjactList.Find(x => x.EmployeeID == Id) == null)
                    {
                        <tr>
                            <td>@projects.Projecttitel</td>
                            <td>@projects.Projectdescription</td>
                            <td></td>
                            <td>
                                <button type="button" @onclick="(() => { ShowCreate(projects.ProjectID); })" class="btn btn-success oi oi-plus"></button>

                            </td>
                        </tr>
                    }
                }
            }
            else
            {
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            }
            </tbody>
        </table>
    </EditForm>
}
else
{
    <div class="d-flex flex-column align-items-center justify-content-center">
        <div class="row">
            <div class="spinner-border text-primary mb-2" role="status" style="height: 5rem; width: 5rem">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
        <div class="row" style="font-size: larger">
            <strong>Lade...</strong>
        </div>
    </div>
}
@if (ShowPopUpdate)
{
    <div class="modal fade show mt-5" id="myModal" style=" display: inline-block;">
        <div class="modal-dialog border-dark">
            <div class="modal-content">
                <div class="modal-header flex-column">
                    <h4 class="modal-title col-12 text-center">Aktivität bearbeiten</h4>
                </div>
                <div class="modal-body text-center">
                    <div class="form-group">

                        <!------ Project Activity ---------->
                        <div class="form-group">
                            <label class="mr-3 mt-2">Projektaktivität: </label>
                            <select >
                                <option value="" selected disabled>Bitte wählen Sie eine Projekttätigkeit aus</option>
                                @foreach (var activities in _projectActivityService.GetAllGlobalProjectActivities())
                                {
                                    <option value="" @onclick="(() => { _projectActivity.Description = activities; })">@activities</option>
                                }
                            </select>
                        </div>
                        <!------ Soft Skills ---------->
                        <div class="form-group">
                            <label class="mr-3 mt-2">Softskill: </label>
                            @if (_projectActivity.SoftSkills.Any())
                            {
                                @foreach (var softskilll in _projectActivity.SoftSkills)
                                {
                                    <button type="button" class="btn btn-outline-success btn-sm mr-2" @onclick=@(() => { _projectActivity.SoftSkills.RemoveAll(x => x.Equals(softskilll)); })>
                                        <a>
                                            <a class="showRemove"> @softskilll </a>
                                            <a class="remove">
                                                <span style="color: darkred" class="oi oi-x"></span>
                                            </a>
                                        </a>
                                    </button>
                                }
                            }
                        </div>
                        @foreach (var softskill in Emp.Softskills)
                        {
                            if (!_projectActivity.SoftSkills.Contains(softskill))
                            {
                                <button type="button" class="btn btn-outline-dark btn-sm mr-2 mb-2" @onclick=@(() => { _projectActivity.SoftSkills.Add(softskill); })>
                                    @softskill
                                </button>
                            }
                        }


                        <!------ Hard Skills ---------->
                        <div class="form-group">
                            <label class="mr-3 mt-2">Hardskill: </label>
                            @if (_projectActivity.HardSkills.Any())
                            {
                                @foreach (var hardskilll in _projectActivity.HardSkills)
                                {
                                    <button type="button" class="btn btn-outline-success btn-sm mr-2" @onclick=@(() => { _projectActivity.HardSkills.RemoveAll(x => x.Equals(hardskilll)); })>
                                        <a>
                                            <a class="showRemove"> @hardskilll </a>
                                            <a class="remove">
                                                <span style="color: darkred" class="oi oi-x"></span>
                                            </a>
                                        </a>
                                    </button>
                                }
                            }
                        </div>


                        <input class="form-control" type="text" placeholder="Suche Hardskill..."
                               @bind="Filter"
                               @bind:event="oninput">
                        @foreach (var hardskill in Emp.Hardskills)
                        {
                            if (!_projectActivity.HardSkills.Contains(hardskill.Description))
                            {
                                <button type="button" class="btn btn-outline-dark btn-sm mr-2 mb-2" @onclick=@(() => { _projectActivity.HardSkills.Add(hardskill.Description); })>
                                    @hardskill.Description
                                </button>
                            }
                        }
                    </div>

                    <div class="float-right">
                        <button type="button" class="btn btn-info" data-dismiss="modal" @onclick="(() => { ShowPopUpdate = !ShowPopUpdate; })">
                            <span class="oi oi-circle-x" aria-hidden="true"></span> Abbrechen
                        </button>
                        <button type="button" class="btn btn-success" data-dismiss="modal" @onclick="(() => { UpdateProjectActivity(_projectActivity); ShowPopUpdate = !ShowPopUpdate;})">
                            <span class="oi oi-document" aria-hidden="true"></span> Speichern
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@if (ShowPopCreate)
{
    <div class="modal fade show mt-5" id="myModal" style=" display: inline-block;">
        <div class="modal-dialog border-dark">
            <div class="modal-content">
                <div class="modal-header flex-column">
                    <h4 class="modal-title col-12 text-center">Aktivität bearbeiten</h4>
                </div>
                <div class="modal-body text-center">
                    <div class="form-group">

                        <!------ Project Activity ---------->
                        <div class="form-group">
                            <label class="mr-3 mt-2">Projektaktivität: </label>
                            <select>
                                @foreach (var activities in _projectActivityService.GetAllGlobalProjectActivities())
                                {
                                    <option @onclick="(() => { _projectActivity.Description = activities; })">@activities</option>
                                }
                            </select>
                        </div>


                        <!------ Soft Skills ---------->
                        <div class="form-group">
                            <label class="mr-3 mt-2">Softskill: </label>
                            @if (_projectActivity.SoftSkills.Any())
                            {
                                @foreach (var softskilll in _projectActivity.SoftSkills)
                                {
                                    <button type="button" class="btn btn-outline-success btn-sm mr-2" @onclick=@(() => { _projectActivity.SoftSkills.RemoveAll(x => x.Equals(softskilll)); })>
                                        <a>
                                            <a class="showRemove"> @softskilll </a>
                                            <a class="remove">
                                                <span style="color: darkred" class="oi oi-x"></span>
                                            </a>
                                        </a>
                                    </button>
                                }
                            }
                        </div>
                        @foreach (var softskill in Emp.Softskills)
                        {
                            if (!_projectActivity.SoftSkills.Contains(softskill))
                            {
                                <button type="button" class="btn btn-outline-dark btn-sm mr-2 mb-2" @onclick=@(() => { _projectActivity.SoftSkills.Add(softskill); })>
                                    @softskill
                                </button>
                            }
                        }


                        <!------ Hard Skills ---------->
                        <div class="form-group">
                            <label class="mr-3 mt-2">Hardskill: </label>
                            @if (_projectActivity.HardSkills.Any())
                            {
                                @foreach (var hardskilll in _projectActivity.HardSkills)
                                {
                                    <button type="button" class="btn btn-outline-success btn-sm mr-2" @onclick=@(() => { _projectActivity.HardSkills.RemoveAll(x => x.Equals(hardskilll)); })>
                                        <a>
                                            <a class="showRemove"> @hardskilll </a>
                                            <a class="remove">
                                                <span style="color: darkred" class="oi oi-x"></span>
                                            </a>
                                        </a>
                                    </button>
                                }
                            }
                        </div>


                        <input class="form-control" type="text" placeholder="Suche Hardskill..."
                               @bind="Filter"
                               @bind:event="oninput">
                        @foreach (var hardskill in Emp.Hardskills)
                        {
                            if (!_projectActivity.HardSkills.Contains(hardskill.Description))
                            {
                                <button type="button" class="btn btn-outline-dark btn-sm mr-2 mb-2" @onclick=@(() => { _projectActivity.HardSkills.Add(hardskill.Description); })>
                                    @hardskill.Description
                                </button>
                            }
                        }
                    </div>

                    <div class="float-right">
                        <button type="button" class="btn btn-info" data-dismiss="modal" @onclick="(() => { ShowPopCreate = !ShowPopCreate; })">
                            <span class="oi oi-circle-x" aria-hidden="true"></span> Abbrechen
                        </button>
                        <button type="button" class="btn btn-success" data-dismiss="modal" @onclick="(() => { SetProjectActivity(_projectActivity); ShowPopCreate = !ShowPopCreate;})">
                            <span class="oi oi-document" aria-hidden="true"></span> Speichern
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@if (ShowPopAdd)
{
    <div class="modal fade show mt-5" id="myModal" style=" display: inline-block;">
        <div class="modal-dialog border-dark">
            <div class="modal-content">
                <div class="modal-header flex-column">
                    <h4 class="modal-title col-12 text-center">Aktivität bearbeiten</h4>
                </div>
                <div class="modal-body text-center">
                    <div class="form-group">

                        <!------ Project Activity ---------->
                        <div class="form-group">
                            <label class="mr-3 mt-2">Projektaktivität: </label>
                            <select>
                                <option value="" selected disabled>Bitte wählen Sie eine Projekttätigkeit aus</option>
                                @foreach(var activities in _projectActivityService.GetActivitiesDesOfProject(ProjectId).Where(x => !_projectActivityService.GetEmployeeProjectActivities(Id, ProjectId).Exists(k => k.Description == x))){
                                    <option @onclick="(() => { _projectActivity.Description = activities; })">@activities</option>
                                }
                            </select>
                        </div>


                        <!------ Soft Skills ---------->
                        <div class="form-group">
                            <label class="mr-3 mt-2">Softskill: </label>
                            @if (_projectActivity.SoftSkills.Any())
                            {
                                @foreach (var softskilll in _projectActivity.SoftSkills)
                                {
                                    <button type="button" class="btn btn-outline-success btn-sm mr-2" @onclick=@(() => { _projectActivity.SoftSkills.RemoveAll(x => x.Equals(softskilll)); })>
                                        <a>
                                            <a class="showRemove"> @softskilll </a>
                                            <a class="remove">
                                                <span style="color: darkred" class="oi oi-x"></span>
                                            </a>
                                        </a>
                                    </button>
                                }
                            }
                        </div>
                        @foreach (var softskill in Emp.Softskills)
                        {
                            if (!_projectActivity.SoftSkills.Contains(softskill))
                            {
                                <button type="button" class="btn btn-outline-dark btn-sm mr-2 mb-2" @onclick=@(() => { _projectActivity.SoftSkills.Add(softskill); })>
                                    @softskill
                                </button>
                            }
                        }


                        <!------ Hard Skills ---------->
                        <div class="form-group">
                            <label class="mr-3 mt-2">Hardskill: </label>
                            @if (_projectActivity.HardSkills.Any())
                            {
                                @foreach (var hardskilll in _projectActivity.HardSkills)
                                {
                                    <button type="button" class="btn btn-outline-success btn-sm mr-2" @onclick=@(() => { _projectActivity.HardSkills.RemoveAll(x => x.Equals(hardskilll)); })>
                                        <a>
                                            <a class="showRemove"> @hardskilll </a>
                                            <a class="remove">
                                                <span style="color: darkred" class="oi oi-x"></span>
                                            </a>
                                        </a>
                                    </button>
                                }
                            }
                        </div>


                        <input class="form-control" type="text" placeholder="Suche Hardskill..."
                               @bind="Filter"
                               @bind:event="oninput">
                        @foreach (var hardskill in Emp.Hardskills)
                        {
                            if (!_projectActivity.HardSkills.Contains(hardskill.Description))
                            {
                                <button type="button" class="btn btn-outline-dark btn-sm mr-2 mb-2" @onclick=@(() => { _projectActivity.HardSkills.Add(hardskill.Description); })>
                                    @hardskill.Description
                                </button>
                            }
                        }
                    </div>

                    <div class="float-right">
                        <button type="button" class="btn btn-info" data-dismiss="modal" @onclick="(() => { ShowPopAdd = !ShowPopAdd; })">
                            <span class="oi oi-circle-x" aria-hidden="true"></span> Abbrechen
                        </button>
                        <button type="button" class="btn btn-success" data-dismiss="modal" @onclick="(() => { SetProjectActivity(_projectActivity); ShowPopAdd = !ShowPopAdd;})">
                            <span class="oi oi-document" aria-hidden="true"></span> Speichern
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code
{
    DeleteConfirmationProjectEmployee _deleteConfirmation;

    [Parameter]
    public int Id { get; set; }

    public int ProjectId { get; set; }
    private ProjectActivity _projectActivity;
    private bool _pageIsLoaded = false;
    public bool ShowPopUpdate { get; set; }
    public bool ShowPopCreate { get; set; }
    public bool ShowPopAdd { get; set; }
    private Dictionary<int, bool> _booleanProj = new Dictionary<int, bool>();

    public Employee Emp { get; set; }
    public ProjectActivity ProjActivity { get; set; }
    public Project Project { get; set; }

    public List<ProjectActivity> ProjactList = new List<ProjectActivity>();
    public string Input { get; set; }
    public bool Clicked { get; set; } = false;
    private string Filter { get; set; }
    public List<Hardskill> HardskillList = new List<Hardskill>();


    protected override async Task OnInitializedAsync()
    {
        if (_httpContextAccessor.HttpContext != null)
        {
            string context = _httpContextAccessor.HttpContext.User.Claims.FirstOrDefault()?.Value;
            Id = Int16.Parse(context ?? throw new InvalidOperationException());
        }
        Task<List<Hardskill>> tempHard = _hardskillService.GetAllHardskills();
        HardskillList = await tempHard;
        ProjActivity = new ProjectActivity();
        Emp = _employeeService.GetEmployeeProfile(Id);
        foreach (var pA in _projectActivityService.GetProjectActivitiesOfEmployee(Id))
        {
            _booleanProj.Add(pA.ProjectActivityID, false);
        }
        _pageIsLoaded = true;
    }


    public bool IsVisible(string titel)
    {
        if (string.IsNullOrEmpty(Filter))
        {
            return true;
        }
        return titel.Contains(Filter, StringComparison.OrdinalIgnoreCase);
    }

    public void SetProjectActivity(ProjectActivity activity)
    {
        _projectActivityService.SetProjectActivityToEmployee(activity);
        UpdateLists();
    //_navManager.NavigateTo("/employeeProject/" + Emp.EmployeeID, forceLoad: true);
    }

    public void UpdateProjectActivity(ProjectActivity activity)
    {
        _projectActivityService.UpdateProjectActivityToEmployee(activity);
    //_navManager.NavigateTo("/employeeProject/" + Emp.EmployeeID, forceLoad: true);
    }

    public void DeleteProjectActivity(ProjectActivity activity)
    {
        _projectActivity = activity;
        _deleteConfirmation.Showing();
    }

    public void CollProj(int id)
    {
        _booleanProj[id] = !_booleanProj[id];
    }


    public void UpdateLists()
    {
        StateHasChanged();
    }

    private void ShowUpdate(ProjectActivity activity)
    {
        if (!ShowPopUpdate)
        {
            _projectActivity = activity;
        }

        ShowPopUpdate = !ShowPopUpdate;
    }

    private void ShowAdd(ProjectActivity activity)
    {
        if (!ShowPopAdd)
        {
            ProjectId = activity.ProjectID;
            _projectActivity = new ProjectActivity();
            ProjActivity = activity;
        }

        ShowPopAdd = !ShowPopAdd;
    }

    private void ShowCreate(int projId)
    {
        if (!ShowPopCreate)
        {
            ProjectId = projId;
            _projectActivity = new ProjectActivity();
        }

        ShowPopCreate = !ShowPopCreate;
    }
}