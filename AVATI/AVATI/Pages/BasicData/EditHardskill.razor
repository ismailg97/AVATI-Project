@using AVATI.Data
@using DocumentFormat.OpenXml.Drawing.Diagrams

@inject IHardskillService _hardskillService
@inject NavigationManager _navigationManager


<div class="modal @(_show ? "fade show" : "" )" id="myModal" style=" display: @(_show ? "block" : "none");">
               <div class="modal-dialog">
                 <div class="modal-content">
                   <div class="modal-header">
                     <h4 class="modal-title">Ändere den Hardskill</h4>
                     <button type="button" class="close" data-dismiss="modal" @onclick="Showing">&times;</button>
                   </div>
                   <EditForm Model="@NewHardskill" OnValidSubmit="Update">
                     <div class="modal-body">
                       <label class="form-label">Bezeichnung:</label>
                       <InputText class="form-control" @bind-Value="@NewHardskill.Description"/>
                       <label class="form-label">Oberkategorie:</label>
                       <InputSelect class="form-control" @bind-Value="@UpperCat">
                         <option value="">Keine Oberkategorie</option>
                         @foreach (var hardskillcat in _hardskillService.GetAllHardskillCategorys())
                         {
                           <option value="@hardskillcat.Description">@hardskillcat.Description</option>
                         }
                       </InputSelect>
                     </div>
                   <div class="modal-footer">
                     <button type="submit" class="btn btn-success">Speichern</button>
                     <button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="Showing">Abbrechen</button>
                   </div>
                   </EditForm>
                 </div>
               </div>
          </div>
@if (_show)
{
  <div class="modal-backdrop fade show"></div>
}

@code {
  [Parameter] public BasicDataAbstract Abstract { get; set; }
  
  private bool _show = false;

  [Parameter] 
  public Hardskill OldHardskill{ get; set; }

  string UpperCat { get; set; }

  private Hardskill NewHardskill { get; set; } = new();

  protected override void OnParametersSet()
  {
    NewHardskill.Description = OldHardskill?.Description;
    if (OldHardskill != null)
    {
      UpperCat = OldHardskill.Uppercat == null ? "" : OldHardskill.Uppercat.Description;
    }
  }

  private void Update()
  {
    NewHardskill.Height = 0;
    NewHardskill.Subcat = null;
    
    NewHardskill.Uppercat = string.IsNullOrEmpty(UpperCat) ? null : _hardskillService.GetHardskillCategory(UpperCat);
    
    _hardskillService.UpdateHardskill(NewHardskill, OldHardskill);
    Abstract.UpdateLists();
    Showing();
    //_navigationManager.NavigateTo(_navigationManager.Uri, true);
  }

  public void Showing()
  {
    _show = !_show;
    StateHasChanged();
  }
    
}