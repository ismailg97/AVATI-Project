@using AVATI.Data

@inject IBasicDataService _basicDataService
@inject IHardskillService _hardskillService
@inject NavigationManager _navigationManager


<div class="modal @(_show ? "fade show" : "" )" id="myModal" style=" display: @(_show ? "block" : "none");">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Löschvorgang bestätigen</h4>
                <button type="button" class="close" data-dismiss="modal" @onclick="Showing">&times;</button>
            </div>
            @if (Type == BasicDataType.SoftSkill){
                <div class="modal-body">
                    Sind Sie sicher, dass der Soft Skill "<b>@Description</b>" gelöscht werden soll?
                </div>
            } else if (Type == BasicDataType.Field) {
                <div class="modal-body">
                    Sind Sie sicher, dass die Branche "<b>@Description</b>" gelöscht werden soll?
                </div>
            } else if (Type == BasicDataType.Role) {
                <div class="modal-body">
                    Sind Sie sicher, dass die Rolle "<b>@Description</b>" gelöscht werden soll?
                </div>
            } else {
                <div class="modal-body">
                    Sind Sie sicher, dass der Hard Skill "<b>@Description</b>" gelöscht werden soll?
                </div>
            }
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="Showing">Abbrechen</button>
                <button type="button" class="btn btn-success" @onclick="Delete">Ok</button>
            </div>
        </div>
    </div>
</div>
@if (_show)
{
    <div class="modal-backdrop fade show"></div>
}


@code {
    [Parameter] public BasicDataAbstract Abstract { get; set; }
    
    [Parameter]
    public string Description { get; set; }

    [Parameter]
    public BasicDataType Type { get; set; }

    private bool _show = false;

    private async Task Delete()
    {
        switch (Type)
        {
            case BasicDataType.SoftSkill:
                _basicDataService.DeleteSoftSkill(Description);
                Abstract.UpdateSoftskills();
                break;
            case BasicDataType.Field:
                _basicDataService.DeleteField(Description);
                Abstract.UpdateFields();
                break;
            case BasicDataType.Role:
                _basicDataService.DeleteRole(Description);
                Abstract.UpdateRoles();
                break;
            default:
                await _hardskillService.DeleteHardskill(Description);
                Showing();
                await Abstract.UpdateHardskills();
                await Abstract.UpdateCategorys();
                return;
        }
        Showing();
        //_navigationManager.NavigateTo(_navigationManager.Uri, true);
    }

    public void Showing()
    {
        _show = !_show;
        StateHasChanged();
    }

}
