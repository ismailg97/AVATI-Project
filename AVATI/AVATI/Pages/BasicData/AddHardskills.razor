@using AVATI.Data
@using DocumentFormat.OpenXml.Wordprocessing

@inject IHardskillService _hardskillService
@inject NavigationManager _navigationManager

<div class="modal @(_show ? "fade show" : "" )" id="myModal" style=" display: @(_show ? "block" : "none");">
               <div class="modal-dialog">
                 <div class="modal-content">
                   <div class="modal-header">
                     @if (ShowCreateCat)
                     {
                       <h5 class="modal-title">
                         Erstellen einer neuen Kategorie
                       </h5>
                     } else {
                       <h5 class="modal-title">
                         Kategorisierung von Hardskills in "<b>@Description</b>"
                       </h5>
                     }
                     <button type="button" class="close" data-dismiss="modal" @onclick="Showing">&times;</button>
                   </div>
                   <div class="modal-body">
                     <div class="container">
                       
                       @if (ShowCreateCat)
                       {
                         <div class="form-group">
                           <label>Bezeichnung der Kategorie:</label>
                           <input class="form-control" type="text" @bind="_cat"/>
                         </div>
                       }

                       @if (_hardskillService.GetHardskillCategory(Description)?.Subcat != null && _hardskillService.GetHardskillCategory(Description).ContainsAnyHardskills())
                       {
                         <h6>Bereits enthaltene Hardskills</h6>
                         <hr/>
                         @foreach (var hardskill in _hardskillService.GetHardskillCategory(Description).Subcat)
                         {
                           if (hardskill.IsHardskill)
                           {
                             <button type="button" class="@(IsInList(hardskill.Description) ? "btn btn-primary btn-sm" : "btn btn-secondary btn-sm")" @onclick="() => HardskillList(hardskill)">
                               <a><a class="@(IsInList(hardskill.Description) ? "showRemove" : "")">@hardskill.Description</a> <a class="remove"><span class="oi oi-x"></span></a></a>
                             </button>
                           }
                         }
                       }


                       @if (_hardskillService.GetAllHardskills().Any(x => x.Uppercat == null))
                       {
                         <h6>Hardskills ohne Hardskillkategorie</h6>
                         <hr/>
                         foreach (var hardskill in _hardskillService.GetAllHardskills())
                         {
                           if (hardskill.Uppercat == null)
                           {
                             <button type="button" class="@(IsInList(hardskill.Description) ? "btn btn-primary btn-sm" : "btn btn-secondary btn-sm")" @onclick="() => HardskillList(hardskill)">
                               <a><a class="@(IsInList(hardskill.Description) ? "showRemove" : "")">@hardskill.Description</a> <a class="remove"><span class="oi oi-x"></span></a></a>
                             </button>
                           }
                         }
                       }

                       @if (_showCreateSkill)
                       {
                         <div class="distance">
                           <label>Bezeichnung des Hardskills:</label>
                           <input class="form-control" type="text" @bind="_hardskill"/>
                           <button class="check" @onclick="CreateHardskill">&#10003;</button>
                           <button class="stop" @onclick="ShowingCreateHardskill">&#10005;</button>
                         </div>
                       }
                       else
                       {
                         <div>
                           <button class="btn btn-outline-success" @onclick="ShowingCreateHardskill">Create New Hardskill</button>
                         </div>
                       }

                       <div>
                         <button class="btn btn-outline-info" @onclick="ShowingCat">Hardskills mit Kategorien @(_showCat ? "ausblenden" : "einblenden")</button>
                       </div>
                       @if (_showCat)
                       {
                         <div class="list-group border-dark overflow-auto mr-3 col-9" style="height: 200px">
                              @foreach (var hardskillcat in _hardskillService.GetAllHardskillCategorys())
                              {
                                  if (hardskillcat.ContainsAnyHardskills() && hardskillcat.Description != Description)
                                  {
                                    <div class="container">
                                      <h6>@hardskillcat.Description</h6>
                                      <hr/>
                                      @foreach (var hardskill in hardskillcat.Subcat)
                                      {
                                          if (hardskill.IsHardskill)
                                          {
                                            <button type="button" class="@(IsInList(hardskill.Description) ? "btn btn-primary btn-sm" : "btn btn-secondary btn-sm")" @onclick="() => HardskillList(hardskill)">
                                              <a><a class="@(IsInList(hardskill.Description) ? "showRemove" : "")">@hardskill.Description</a> <a class="remove"><span class="oi oi-x"></span></a></a>
                                            </button>
                                          }
                                      }
                                    </div>
                                  }
                              }
                         </div>
                       }

                     </div>
                   </div>
                   <div class="modal-footer">
                     <button type="button" class="btn btn-success" @onclick="AddingHardskills">Speichern</button>
                     <button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="Showing">Abbrechen</button>
                   </div>
                 </div>
               </div>
          </div>
@if (_show)
{
  <div class="modal-backdrop fade show"></div>
}

@code {
  [Parameter] public BasicDataAbstract Abstract { get; set; }
  
  [Parameter]
  public string Description { get; set; }

  private List<Hardskill> Subcat { get; set; } = new();

  private string _hardskill;

  private string _cat;
  
  private bool _show = false;

  private bool _showCat = false;

  private bool _showCreateSkill = false;

  private bool ShowCreateCat { get; set; } = false;

  protected override void OnParametersSet()
  {
    ShowCreateCat = !_hardskillService.GetAllHardskillCategorys().Exists(x => x.Description == Description);
    var cat = _hardskillService.GetHardskillCategory(Description);
    
    if (cat != null)
    {
      foreach(var hardskill in cat.Subcat)
      {
        if (hardskill.IsHardskill)
          Subcat.Add(hardskill);
      }
    }
  }
  
  private void ShowingCat()
  {
    _showCat = !_showCat;
  }

  private void ShowingCreateHardskill()
  {
    _showCreateSkill = !_showCreateSkill;
  }

  private void HardskillList(Hardskill hardskill)
  {
    if (Subcat.Contains(hardskill))
      Subcat.Remove(hardskill);
    else
      Subcat.Add(hardskill);
  }
  
  private bool IsInList(string description)
  {
    return Subcat.Exists(x => x.Description == description);
  }

  private void AddingHardskills()
  {
    if (ShowCreateCat)
    {
      var cat = new Hardskill()
      {
          Description = _cat,
          Uppercat = null,
          Subcat = new List<Hardskill>(Subcat),
          Height = 2,
          IsHardskill = false
      };
      _hardskillService.CreateHardskillCategory(cat);
      Abstract.UpdateLists();
    } 
    else 
      _hardskillService.EditHardskillsCategory(Description, Subcat);
    
    Subcat.Clear();
    Showing();
  }

  private void CreateHardskill()
  {
    var hardskill = new Hardskill()
    {
      Description = _hardskill,
      Uppercat = null,
      Subcat = null,
      Height = 0
    };
    _hardskillService.CreateHardskill(hardskill);
    HardskillList(hardskill);
    ShowingCreateHardskill();
  }

  public void Showing()
  {
    _show = !_show;
    Subcat.Clear();
    StateHasChanged();
  }
    
}