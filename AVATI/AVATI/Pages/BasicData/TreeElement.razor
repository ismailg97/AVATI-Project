@using AVATI.Data
@using System.Collections.Generic

@inject IHardskillService _hardskillService

@if (_loadPagefinished)
{
    <ul>
        @if (ShowCategorys)
        {
            foreach (var category in _categorys)
            {
                <li><a class="cat" type="button" @onclick="() => ShowingUnder(category)">@category</a>
                    @if (_subcatsofCategory[category] != null && _subcatsofCategory[category].Any())
                    {
                        <TreeElement Subcats="@_subcatsofCategory[category]" ShowHardskills="@_showSubHardskills[category]" 
                                     ShowCategorys="@_showSubCategorys[category]" ContainsJustHardskills="@_containsJustHardskills[category]"/>
                    }
                </li>
            }
        }

        @if (ShowHardskills)
        {
            foreach (var hardskill in _hardskills)
            {
                <li><a class="hardskill" type="button">@hardskill</a>
                </li>
            }
        }
    </ul>
}
else if(!ContainsJustHardskills)
{
    <div class="d-flex flex-column align-items-start justify-content-start">
        <div class="row">
            <div class="spinner-border" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
        <div class="row">
            <strong>Lade...</strong>
        </div>
    </div>
}

@code {
    [Parameter]
    public List<string> Subcats { get; set; }

    [Parameter]
    public bool ShowHardskills { get; set; }
    
    [Parameter]
    public bool ShowCategorys { get; set; }
    
    [Parameter]
    public bool ContainsJustHardskills { get; set; } 

    private List<string> _categorys = new();
    
    private List<string> _hardskills = new();

    private Dictionary<string, List<string>> _subcatsofCategory = new();
    
    private Dictionary<string, bool> _showSubHardskills = new();
    
    private Dictionary<string, bool> _showSubCategorys = new();
    
    private Dictionary<string, bool> _containsJustHardskills = new();

    private Dictionary<string, bool> _containsJustCategorys = new();

    private bool _loadPagefinished;

    protected override void OnInitialized()
    {
        _loadPagefinished = false;
    }

    protected override async Task OnParametersSetAsync()
    {
        foreach (var description in Subcats)
        {
            var skillOrCat = await _hardskillService.GetHardskillOrCategory(description);
            
            if(skillOrCat.IsHardskill)
            {
                if(!_hardskills.Contains(description))
                    _hardskills.Add(description);
            } else
            {
                if(!_categorys.Contains(description))
                    _categorys.Add(description);
                _subcatsofCategory.TryAdd(description, skillOrCat.Subcat);
                _containsJustHardskills.TryAdd(description, await _hardskillService.ContainsJustHardskills(description));
                _containsJustCategorys.TryAdd(description, !await _hardskillService.ContainsAnyHardskills(description));
                _showSubHardskills.TryAdd(description, false);
                _showSubCategorys.TryAdd(description, true);
            }
        }

        _loadPagefinished = true;
    }

    public void ShowingUnder(string category)
    {
        if (_containsJustHardskills[category])
        {
            _showSubCategorys[category] = true;
            _showSubHardskills[category] = !_showSubHardskills[category];
            
        } else if (_containsJustCategorys[category]) {
            
            _showSubCategorys[category] = !_showSubCategorys[category];
            _showSubHardskills[category] = false;
            
        } else if (!_showSubCategorys[category]) {
            
            _showSubCategorys[category] = true;
            _showSubHardskills[category] = false;
            
        } else if (_showSubCategorys[category] && _showSubHardskills[category]) {
            
            _showSubCategorys[category] = false;
            _showSubHardskills[category] = false;
            
        } else {
            
            _showSubCategorys[category] = true;
            _showSubHardskills[category] = true;
        }
        
        StateHasChanged();
    }

}