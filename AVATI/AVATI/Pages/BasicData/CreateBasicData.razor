@using AVATI.Data
@using AVATI.Pages

@inject IBasicDataService _basicDataService
@inject NavigationManager _navigationManager


<div class="modal @(_show ? "fade show" : "" )" id="myModal" style=" display: @(_show ? "block" : "none");">
               <div class="modal-dialog">
                  <div class="modal-content">
                    <div class="modal-header">
                      @if (Type == BasicDataType.SoftSkill){
                        <h4 class="modal-title">Erstelle ein Softskill</h4>
                      } else if (Type == BasicDataType.Field) {
                        <h4 class="modal-title">Erstelle eine Branche</h4>
                      } else {
                        <h4 class="modal-title">Erstelle eine Rolle</h4>
                      }
                      <button type="button" class="close" data-dismiss="modal" @onclick="Showing">&times;</button>
                    </div>
                    <div class="modal-body">
                      <input class="form-control col-7" type="text" id="softskill" @bind="Description"/>
                    </div>
                    <div class="modal-footer">
                      <button type="button" class="btn btn-success" @onclick="Create">Speichern</button>
                      <button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="Showing">Abbrechen</button>
                      </div>
                  </div>
              </div>
          </div>
@if (_show)
{
  <div class="modal-backdrop fade show"></div>
}


@code {
  [Parameter] public BasicDataAbstract Abstract { get; set; }
  
  [Parameter]
  public BasicDataType Type { get; set; } 
  
  private bool _show = false;

  private string Description { get; set; } 

  private void Create()
  {
    switch (Type)
    {
      case BasicDataType.SoftSkill:
        _basicDataService.CreateSoftSkill(Description);
        break;
      case BasicDataType.Field:
        _basicDataService.CreateField(Description);
        break;
      default:
        _basicDataService.CreateRole(Description);
        break;
    }
    Description = "";
    Abstract.UpdateLists();
    Showing();
  //_navigationManager.NavigateTo(_navigationManager.Uri, true);
  }

  public void Showing()
  {
    _show = !_show;
    StateHasChanged();
  }
}