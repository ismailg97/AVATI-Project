@page "/LoginFail"
@using AVATI.Data
@using System.Net.Http.Json
@using System.Text
@using System.Threading
@using Microsoft.AspNetCore.Http.Extensions
@using Newtonsoft.Json
@using System.Net.Http.Headers
@inject HttpClient _httpClient
@inject ILoginService _login
@inject NavigationManager _navManager
@inject IEmployeeService _employeeService
@inject IHttpClientFactory _httpClientFactory


<link href="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<!------ Include the above in your HEAD tag ---------->

<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.8/css/all.css">

<div id="bg-img" class="container">
    <div style="margin-left: 400px;" class="container">
        <br>
        <hr>
        <div class="row">
            <aside class="col-sm-4">
                <div style="margin-top: 50%" class="card">
                    <article class="card-body">
                        <h4 class="card-title text-center mb-4 mt-1">Anmelden</h4>
                        <hr>
                        <p class=" text-center">Bitte geben Sie hier ihre Nutzerdaten ein</p>
                        <p  style=" color: #ff0000">
                        <div class="alert alert-danger">Falscher Benutzername oder falsches Passwort eingegeben.<br/> Bitte versuchen Sie erneut.</div>
                        </p>
                        <form action="cookie" method="post">
                            <div class="form-group">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            <i class="fa fa-user"></i>
                                        </span>
                                    </div>
                                    <input name="username" class="form-control" id="username"/>
                                </div> <!-- input-group.// -->
                            </div> <!-- form-group// -->
                            <div class="form-group">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            <i class="fa fa-lock"></i>
                                        </span>
                                    </div>
                                    <input name="password" class="form-control" type="password"/>
                                </div> <!-- input-group.// -->
                            </div> <!-- form-group// -->
                            <div class="form-group">
                                <button type="submit" class="btn btn-primary btn-block"> Login </button>
                            </div> <!-- form-group// -->
                            </form>
                         
                    </article>
                </div> <!-- card.// -->

            </aside> <!-- col.// -->
        </div> <!-- row.// -->
    </div>
</div>
<!--container end.//-->

@if (_booleanSignedIn)
{
    <form action="cookie" method="post">
        <input type="text" name="name" />
        <input type="text" name="empType" />
        <input type="submit" />
    </form>
}


@code {
    private bool _boolean = false;
    LoginClass Log = new LoginClass();
    public int Id { get; set; }
    public string empType { get; set; }
    private bool _booleanSignedIn { get; set; }

    private async Task LoginCheck()
    {
        Id = _login.LogIn(Log.Username, Log.Password);
        if (Id == -1)
        {
            _boolean = true;
        }
        else
        {
            Employee emp = _employeeService.GetEmployeeProfile(Id);
            Console.WriteLine(emp.FirstName + emp.LastName);
           
            using (var client = new HttpClient())
            using (var content = new StringContent(JsonConvert.SerializeObject(emp),Encoding.UTF8, "application/json"))
            {
                //content.Headers.ContentType.CharSet = "";
                content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

                var message = await client.PostAsync("cookie", content);




    //var inputMessage = new HttpRequestMessage
    //{
    //    Content = new StringContent(JsonConvert.SerializeObject(emp), Encoding.UTF8,"application/json")
    //};
    //inputMessage.Headers.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
    //var message = await _httpClient.PostAsync("cookie", inputMessage.Content);
                if (!message.IsSuccessStatusCode)
                    throw new ArgumentException(message.ToString());


    //empType=_login.Login_EmpType(Id);
    //_cookieController.Login(emp);

                _navManager.NavigateTo("/profile/");
            }
        }
    }



}