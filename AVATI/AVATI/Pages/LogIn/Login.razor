@page "/Login"
@using AVATI.Data
@using Blazored.LocalStorage
@inject ILocalStorageService _localStorageService
@inject AuthenticationStateProvider _authenticationStateProvider
@inject ILoginService _login
@inject NavigationManager _navManager
@inject CookieController _cookieController


<link href="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<!------ Include the above in your HEAD tag ---------->

<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.8/css/all.css">

<div id="bg-img" class="container">
    <div style="margin-left: 400px;" class="container">
        <br>
        <hr>
        <div class="row">
            <aside class="col-sm-4">
                <div style="margin-top: 50%" class="card">
                    <article class="card-body">
                        <h4 class="card-title text-center mb-4 mt-1">Anmelden</h4>
                        <hr>
                        <p class=" text-center">Bitte geben Sie hier ihre Nutzerdaten ein</p>
                        <p class="@(_boolean ? "" : "collapse") " style=" color: #ff0000">
                            <div class="alert alert-danger">Falscher Benutzername oder falsches Passwort eingegeben.<br/> Bitte versuchen Sie erneut.</div>
                        </p>
                        <!---<EditForm Model="Log" OnValidSubmit="@LoginCheck"> --->
                            <form action="cookie" method="post">
                            <div class="form-group">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            <i class="fa fa-user"></i>
                                        </span>
                                    </div>
                                    <InputText name="" class="form-control" id="username" placeholder="Max Mustermann" @bind-Value="Log.Username"></InputText>
                                </div> <!-- input-group.// -->
                            </div> <!-- form-group// -->
                            <div class="form-group">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            <i class="fa fa-lock"></i>
                                        </span>
                                    </div>
                                    <InputText class="form-control" @bind-Value="Log.Password" placeholder="123456" type="password"></InputText>
                                </div> <!-- input-group.// -->
                            </div> <!-- form-group// -->
                            <div class="form-group">
                                <button type="submit" class="btn btn-primary btn-block"> Login </button>
                            </div> <!-- form-group// -->
                            </form>
                        <!--- </EditForm> --->
                    </article>
                </div> <!-- card.// -->

            </aside> <!-- col.// -->
        </div> <!-- row.// -->
    </div>
</div>
<!--container end.//-->

@if (_booleanSignedIn)
{
    <form action="cookie" method="post">
        
    </form>
}


@code {
    private bool _boolean = false;
    LoginClass Log = new LoginClass();
    public int Id { get; set; }
    public string empType { get; set; }
    private bool _booleanSignedIn { get; set; }

    private void LoginCheck()
    {
        Id = _login.LogIn(Log.Username, Log.Password);
        if (Id == -1)
        {
            _boolean = true;
        }
        else
        {
            empType=_login.Login_EmpType(Id);
           
    //await _localStorageService.SetItemAsync<string>("Username", Log.Username);
            //await _localStorageService.SetItemAsync("EmployeeType", empType);
            //((CustomAuthStateProvider)_authenticationStateProvider).MarkUserAsAuthenticated(Log.Username, empType);
            //await _authenticationStateProvider.GetAuthenticationStateAsync();
            //_navManager.NavigateTo("");
            _navManager.NavigateTo("/profile/" + Id );
        }
    }



}