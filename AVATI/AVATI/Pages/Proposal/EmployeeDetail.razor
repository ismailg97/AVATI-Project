@using AVATI.Data
@using AVATI.Data.EmployeeDetailFiles
@using DocumentFormat.OpenXml.Drawing

@inject IProposalService _proposal
@inject IEmployeeService _employeeService
@inject IEmployeeDetailService _employeeDetailService

@if (ShowEdit)
{
    if (EmployeeAttributes != null)
    {
        <div class="modal fade show d-block" data-bs-backdrop="static" id="exampleModal" role="dialog">
            <div class="modal-dialog" style="min-width: 1500px" role="document">
                <div class="modal-content bg-light text-black">
                    <div class="modal-header">
                        <h5 class="modal-title font-weight-bolder text-center" id="titleLabel">Detailansicht</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick=@Close>
                            <span aria-hidden="true">Ã—</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="container ml-3" style="min-width: 100%">
                            <div class="row justify-content-md-center">
                                <div class="card col-sm-4 text-black border-dark">
                                    <img src="https://www.geniale-tipps.de/images/t/whatsapp-profilbild-grau.jpg" class="card-img-top" alt=""/>
                                    <div class="card-body pb-3 pt-3">
                                        <h5 class="card-title">@_employeeService.GetEmployeeProfile(EmpId).FirstName @_employeeService.GetEmployeeProfile(EmpId).LastName</h5>
                                        <div class="card-title text-left">
                                            Rate Card Level:
                                            @if (EmployeeAttributes.Rc != 0)
                                            {
                                                <button class="btn btn-sm btn-outline-success" @onclick=@(() => { EmployeeDetailView.Rc = 0; })>@_employeeDetailService.GetEmployeeDetail(EmpId, PropId).Result.Rc</button>
                                                                                                                                                                                                                 
                                            }
                                            else
                                            {
                                                <button class="btn btn-sm btn-outline-dark" @onclick=@(() => {EmployeeDetailView.Rc = EmployeeAttributes.Rc;})>@_employeeDetailService.GetEmployeeDetail(EmpId, PropId).Result.Rc</button>
                                            }
                                        </div>
                                        <div class="card-text text-left">
                                            Branchen:
                                            @foreach (var field in EmployeeAttributes.Field)
                                                {
                                                    if (EmployeeDetailView.Fields.Find(e => e.Equals(field)) != null)
                                                    {
                                                        <button class="btn btn-sm btn-outline-success mb-1 mr-1" id="addField" @onclick=@(() => { EmployeeDetailView.Fields.Remove(field);})>@field</button>
                                                    }
                                                    else
                                                    {
                                                        <button class="btn btn-sm btn-outline-dark mb-1 mr-1" id="addField" @onclick=@(() => {EmployeeDetailView.Fields.Add(field);})>@field</button>
                                                    }
                                                }
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-8">
                                <div class="row mb-2">
                                    <div class="card col-sm-8 border-secondary ml-2 mr-2" style="min-height: 221.883px">
                                        <div class="card-header text-left bg-transparent border-secondary">Hardskills</div>
                                        <div class="card-body text-left">
                                            @foreach (var hardSkill in EmployeeAttributes.Hardskills)
                                            {
                                                if (EmployeeDetailView.Hardskills.Find(e => e.Description.Equals(hardSkill.Description)) != null)
                                                {
                                                    <button class="btn btn-sm btn-outline-success mb-1 mr-1" id="addHardskill" @onclick=@(() => {EmployeeDetailView.Hardskills.RemoveAll(e => e.Description == hardSkill.Description);})>@hardSkill.Description</button>    
                                                }
                                                else
                                                {
                                                    <button class="btn btn-sm btn-outline-dark mb-1 mr-1" id="addHardskill" @onclick=@(() => {EmployeeDetailView.Hardskills.Add(hardSkill);})>@hardSkill.Description</button>
                                                }
                                                
                                            }
                                        </div>
                                    </div>
                                    <div class="card col-sm-3 border-secondary">
                                        <div class="card-header text-left bg-transparent border-secondary">Sprache(n)</div>
                                        <div class="card-body text-left">
                                            @foreach (var lang in EmployeeAttributes.Language)
                                            {
                                                if (EmployeeDetailView.Languages.Find(e => e.Item1.Equals(lang.Item1)) != null)
                                                {
                                                    <button class="btn btn-sm btn-outline-success mb-1 mr-1" id="addLanguage" @onclick=@(() => {EmployeeDetailView.Languages.Remove(lang);})>@lang.Item1 @lang.Item2</button>
                                                }
                                                else
                                                {
                                                    <button class="btn btn-sm btn-outline-dark mb-1 mr-1"  id="addLanguage" @onclick=@(() => { EmployeeDetailView.Languages.Add(lang);})>@lang.Item1 @lang.Item2</button>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                                    <div class="row mt-2">
                                        <div class="card border-secondary col-sm-8 ml-2 mr-2" style="min-height: 221.883px">
                                            <div class="card-header text-left bg-transparent border-secondary">Softskills</div>
                                            <div class="card-body text-left">
                                                @foreach (var softSkill in EmployeeAttributes.Softskills)
                                                {
                                                    if (EmployeeDetailView.Softskills.Contains(softSkill))
                                                    {
                                                        <button class="btn btn-sm btn-outline-success mb-1 mr-1" id="addSoftskill" @onclick=@(() => {EmployeeDetailView.Softskills.Remove(softSkill);})>@softSkill</button>
                                                    }
                                                    else
                                                    {
                                                        <button class="btn btn-sm btn-outline-dark mb-1 mr-1" id="addSoftskill" @onclick=@(() => {EmployeeDetailView.Softskills.Add(softSkill);})>@softSkill</button>
                                                    }
                                                }
                                            </div>
                                        </div>
                                        <div class="card border-secondary col-sm-3">
                                            <div class="card-header text-left bg-transparent border-secondary">Rolle(n)</div>
                                            <div class="card-body text-left">
                                                @foreach (var role in EmployeeAttributes.Roles)
                                                {
                                                    if (EmployeeDetailView.Roles.Find(e => e.Equals(role)) != null)
                                                    {
                                                        <button class="btn btn-sm btn-outline-success mb-1 mr-1" id="addRole" @onclick=@(() => { EmployeeDetailView.Roles.Remove(role);})>@role</button>
                                                    }
                                                    else
                                                    {
                                                        <button class="btn btn-sm btn-outline-dark mb-1 mr-1" id="addRole" @onclick=@(() => {EmployeeDetailView.Roles.Add(role);})>@role</button>
                                                    }
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer mt-5">
                        <button class="btn btn-danger" @onclick="@Close">Abbrechen</button>
                        <button class="btn btn-success" id="submitDetail" @onclick=@(() => { _employeeDetailService.UpdateEmployeeDetail(EmpId, PropId, EmployeeDetailView); Close();})>Ã„nderungen speichern</button> <!--TODO: make work-->
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        Console.WriteLine("Couldn't find employee");
    }
}

@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}

@code {

    [Parameter]
    public int EmpId { get; set; }
    [Parameter]
    public ProposalOverview Abstract { get; set; }
    public int PropId { get; set; }
    public Data.EmployeeDetailFiles.EmployeeDetail EmployeeDetailView;
    public Data.Employee EmployeeAttributes;
    public bool ShowEdit { get; set; }
    public bool ShowBackdrop { get; private set; }

    public async Task Show(int employeeId, int proposalId)
    {
        ShowEdit = !ShowEdit;
        ShowBackdrop = !ShowBackdrop;
        EmpId = employeeId;
        PropId = proposalId;
        Task<Data.EmployeeDetailFiles.EmployeeDetail> detail = _employeeDetailService.GetEmployeeDetail(employeeId, proposalId);
        EmployeeDetailView =  await detail;
        EmployeeAttributes = _employeeService.GetEmployeeProfile(EmpId);
        Console.WriteLine(EmpId.ToString() + PropId.ToString());
        StateHasChanged();
    }

    private void Close()
    {
        ShowEdit = !ShowEdit;
        ShowBackdrop = !ShowBackdrop;
        StateHasChanged();
    }

    
}