@page "/AddProjectActivity"
@page "/AddProjectActivity/{ID:int}"

@using AVATI.Data
@using System.Diagnostics
@using System.ComponentModel

@inject IProjectActivityService _projectActivity
@inject IProjektService _projectService
@inject NavigationManager _navigationmanager

<EditForm Model="NewProjectactivity" OnValidSubmit="@Save">
    <DataAnnotationsValidator/>
    <div class="modal @(_show ? "fade show" : "")" id="myModal" style="display: @(_show ? "block" : "none");">
        <div class="modal-dialog modal-sm col">
            <div class="modal-content">
                <div class="body header">
                    <div class="modal-header">
                        <h5 class="modal-title">Projekttätigkeit hinzufügen/löschen</h5>
                        <button type="button" class="close" data-dismiss="modal" @onclick=@Close>
                            <span aria-hidden="true">x</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <InputText id="projekttitel" class="form-control" @bind-Value="@ExistingValue"></InputText>
                    </div>
                    <div class="modal-footer" style="border-bottom: 0 none">
                        <div class="form-group mb-3">
                            <button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="Close">Cancel</button>
                            <button type="submit" class="btn btn-success" >Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@if (_show)
{
    <div class="modal-backdrop fade show"></div>
}

@code{

    [Parameter]
    public int ID { get; set; }

    private bool _show = false;
    public List<ProjectActivity> ActivitiestoDisplay { get; set; } = new List<ProjectActivity>();
    public List<ProjectActivity> ActivitiestoSearch { get; set; } = new List<ProjectActivity>();
    
    public string ExistingValue { get; set; }
    public ProjectActivity NewProjectactivity { get; set; } = new ProjectActivity();
    
    public void Showing(string input)
    {
        ExistingValue = input;
        _show = !_show;
        StateHasChanged();
    }

    public void Close()
    {
        _show = !_show;
        StateHasChanged();
    }

    public void Save()
    {
        _projectActivity.SetProjectActivity(0, ID, ExistingValue);
        _show = !_show;
        StateHasChanged();
    }
    protected override void OnInitialized()
    {
        ActivitiestoDisplay = _projectActivity.ReturnListProjectActivities(ID);
        ActivitiestoSearch = new List<ProjectActivity>(_projectActivity.ReturnListProjectActivities(ID));
    }
    
}