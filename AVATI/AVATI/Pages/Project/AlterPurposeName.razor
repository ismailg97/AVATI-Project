@page "/Projektübersicht/Projektedit/AlterPurposeName"
@page "/Projektübersicht/Projektedit/AlterPurposeName/{ID:int}"
@page "/AlterPurposeName"

@using AVATI.Data
@using Blazorise


@inject Projectedit _projectedit
@inject JsonImport _jsonImport
@inject IProjektService _projectService
@inject IBasicDataService _basic
@inject ProjectPurposeService _purposeService

@if (_show)
{
    <div class="modal fade show d-block" id="myModal">
        <div class="modal-dialog">
            <div class="modal-content bg-light">
                <div class="modal-header">
                    <h3 class="modal-title">Projektzweckumbenennung</h3>
                    <button type="button" class="close" data-dismiss="modal" @onclick=@Close>
                        <span aria-hidden="true">x</span>
                    </button>
                </div>
                <div class="modal-body text-center">
                    <p>Hier können Sie ein bereits vorhandenes Projektzweck umbenennen.</p>
                    <input class="form-control mb-2" @bind=@Description>
                    <div class="float-right">
                        <button type="button" class="btn btn-info" data-dismiss="modal" @onclick="(() => { _show = !_show; })">
                            <span class="oi oi-circle-x" aria-hidden="true"></span> Abbrechen
                        </button>
                        <button type="button" class="btn btn-success" data-dismiss="modal" @onclick="(() => { UpdatePurpose(OldDescription, Description); _show = !_show;})">
                            <span class="oi oi-document" aria-hidden="true"></span> Speichern
                        </button>
                    </div>
                </div>
            </div>
        </div>


    </div>
}
@if (_show)
{
    <div class="modal-backdrop fade show"></div>
}
@code {
    private ProjectPurpose purposeToAlter { get; set; }

    [Parameter]
    public Projectedit Abstract { get; set; }

    [Parameter]
    public int ID { get; set; }

    private string OldDescription { get; set; }
    private string Description { get; set; }
    
    public void UpdatePurpose(string old, string now)
    {
        _purposeService.UpdatePurposeString(old, now, ID);
        StateHasChanged();
    }
    
    private bool _show;
    public string temp { get; set; }
    
    public void Showing(ProjectPurpose purpose)
    {
        purposeToAlter = purpose;
        OldDescription = purpose.Purpose;
        Description = purpose.Purpose;
        ID = purpose.ProjectID;
        _show = !_show;
        StateHasChanged();
    }

    public void Close()
    {
        _show = !_show;
        StateHasChanged();
    }
}